{
  "info": {
    "_postman_id": "9c0ebfea-2cc9-40d6-a2d4-aba923039234",
    "name": "Invoices",
    "description": "- This set of tests expects you to be using the Base Account.\n\nTests creation of invoices in various scenarios. ",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Pre-request Configurations",
      "item": [
        {
          "name": "Get Notification Subscriptions",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2592e172-faa2-4ba6-b188-29c9626dc738",
                "exec": [
                  "tests[\"Status is 200\"] = responseCode.code === 200;",
                  "",
                  "// Find the payment, order notification subscriptions",
                  "var notifications = JSON.parse(responseBody);",
                  "var list = notifications.data;",
                  "",
                  "_.each(list, function(item) {",
                  "    ",
                  "    if (item.type === \"order:confirmation\")",
                  "        pm.globals.set(\"order_confirmation_subscription_url\", item.url);",
                  "        ",
                  "            if (item.type === \"payment:confirmation\")",
                  "                pm.globals.set(\"payment_confirmation_subscription_url\", item.url);",
                  "        ",
                  "            if (item.type === \"refund:confirmation\")",
                  "                pm.globals.set(\"refund_confirmation_subscription_url\", item.url);        ",
                  "    ",
                  "});",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "aba03a74-55f6-4b4f-9ff9-e0e92a9f735a",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "5646a6c5-cb1a-4508-8a8a-ba8055306f3b",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": "https://{{host}}/api/v1/notification_subscriptions",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        },
        {
          "name": "Disable Order Notification Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec320aec-60a1-416a-8184-2ebe91db1f38",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Order email notifications have been disabled\"] = responseCode.code === 200;",
                  "",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "aba03a74-55f6-4b4f-9ff9-e0e92a9f735a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_id": "afaaf08c-dd30-4239-a728-1b2cec90ca27",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"active\": false\n}"
            },
            "url": "{{order_confirmation_subscription_url}}",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        },
        {
          "name": "Disable Payment Notification Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82452e4c-9550-4daa-8063-f5b84f40aee0",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Payment email notifications have been disabled\"] = responseCode.code === 200;",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "aba03a74-55f6-4b4f-9ff9-e0e92a9f735a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_id": "64318bd1-b85c-4437-b9c3-8d22df5ed11c",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"active\": false\n}"
            },
            "url": "{{payment_confirmation_subscription_url}}",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        },
        {
          "name": "Disable Refund Notification Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5de69872-771e-4fc8-8bc0-76c002663061",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Refund email notifications have been disabled\"] = responseCode.code === 200;",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7839393f-c627-406f-9af5-43661bffc685",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_id": "ac00a4c2-e33c-4bda-8b13-670b080c258e",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"active\": false\n}"
            },
            "url": "{{refund_confirmation_subscription_url}}",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        }
      ],
      "_postman_id": "7bbc2aae-4c9e-4566-961e-7cc050c6e1e2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "db236e77-f986-4125-b356-5008a2e559a8",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "fa8477f9-7918-46af-8244-edb14f473d45",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "With Products",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "28494fce-e67d-4024-a9d9-7e250e69d633",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b52bbf6-8486-4761-9e11-f08ab8d7e82f",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ff5e800c-63e9-428b-91a3-bb3e754ccca8",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Refund Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b1b883bc-4933-4b62-9ae2-aaa13bdb3bfa",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 40 && data.subtotal === 40 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f6ba8916-a802-41d4-8d3c-613e183f5d2d",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"digital.test\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"physical.test\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7629114f-f7f1-468f-b4d2-5d4d8f8679a9",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund shipping was successful\"] = data.total === 5 && data.subtotal === 0 && data.shipping === 5 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b10880eb-9788-410c-b2de-71625e57935e",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"shipping\": 5\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        }
      ],
      "_postman_id": "a69e21a4-6090-4ad2-aa29-bc92f04167c8"
    },
    {
      "name": "With Items",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f00761ba-b933-4f2d-b6a0-cef223819a7e",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 140;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "tests[\"Has shipping\"] = data.shipping > 0;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "0017d9c5-234b-4c6d-a0d2-77326ef37dad",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"name\": \"Remote Control\",\r\n         \"quantity\":1,\r\n         \"type\": \"physical\",\r\n         \"reference_price\": 25\r\n      },\r\n      {\r\n         \"name\":\"Computer Repair\",\r\n         \"quantity\":1,\r\n         \"type\": \"service\",\r\n         \"reference_price\": 100         \r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 140;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f7e19049-baed-432e-8868-f62b36e57e7b",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Refund Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0901c9f-6491-4989-b3c5-f6493b75e798",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 125 && data.subtotal === 125 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "dd1e86ab-7baa-4ba0-9b98-072b1ec03769",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"1\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"2\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b88ba345-b9eb-401d-8f44-fdf2b9183710",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund shipping was successful\"] = data.total === 15 && data.subtotal === 0 && data.shipping === 15 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6fcd6d76-c1e2-4ef5-8649-b63fd9c3724d",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"shipping\": 15\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        }
      ],
      "_postman_id": "faad3afe-4667-4c23-bafe-00d1b7e27e5e"
    },
    {
      "name": "With Items, Custom ID",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f00761ba-b933-4f2d-b6a0-cef223819a7e",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 140;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "tests[\"Has shipping\"] = data.shipping > 0;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "ab741227-4f8a-4f19-9c95-30cdc36eb679",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"name\": \"Remote Control\",\r\n         \"item_id\": \"remote-control\",\r\n         \"quantity\":1,\r\n         \"type\": \"physical\",\r\n         \"reference_price\": 25\r\n      },\r\n      {\r\n         \"name\":\"Computer Repair\",\r\n         \"item_id\": \"computer-repair\",\r\n         \"quantity\":1,\r\n         \"type\": \"service\",\r\n         \"reference_price\": 100         \r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 140;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ee3bf2e2-51f6-4f00-a54a-56a8419ce810",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Refund Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0901c9f-6491-4989-b3c5-f6493b75e798",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 125 && data.subtotal === 125 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "936bdd5f-c1f4-44f4-9eef-94a95f19690c",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"remote-control\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"computer-repair\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b88ba345-b9eb-401d-8f44-fdf2b9183710",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund shipping was successful\"] = data.total === 15 && data.subtotal === 0 && data.shipping === 15 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b02fe3e8-b473-46d4-a006-d55e88b796a7",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"shipping\": 15\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        }
      ],
      "_postman_id": "a5552dd1-266e-4f19-aba0-8ea74326c244"
    },
    {
      "name": "With Items, Digital",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e387113-0587-4e31-b109-203e34ddc343",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 250;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "tests[\"Doesn't have shipping\"] = data.shipping === 0;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "62ca9398-ea59-4200-bb55-618adea6b9d9",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"name\": \"Investment Forecast PDF\",\r\n         \"quantity\":2,\r\n         \"type\": \"digital\",\r\n         \"reference_price\": 100\r\n      },\r\n      {\r\n         \"name\":\"File Download\",\r\n         \"quantity\":1,\r\n         \"type\": \"digital\",\r\n         \"reference_price\": 50         \r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "977e2011-10ce-42c5-b38c-d3d0611bf04d",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 250;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a56b5c39-a0e5-485f-860d-66a94e4cb527",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Refund Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61b0f606-080c-4166-8c28-d98df0e8d3b6",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 150 && data.subtotal === 150 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d34314e1-6549-4bf5-90b3-c5a8449e10bd",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"1\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"2\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Remaining Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "480bfc30-7dcd-414c-afcf-7dd92769b3be",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 100 && data.subtotal === 100 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "171be27b-de92-431b-a975-921870dd1830",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"1\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da696f2d-6cfa-40fd-b2d4-6e60ccb82cfd",
                "exec": [
                  "tests[\"Try to refund shipping when no shipping was paid\"] = responseCode.code === 400;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "8bb177c8-f4ea-4493-9789-b0050bb57dee",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"shipping\": 15\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        }
      ],
      "_postman_id": "fd3c4f3c-b7df-4845-9320-0134838d45d7"
    },
    {
      "name": "With Product and Item",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0cf5fcdf-fe56-4e0c-973e-6600faae9382",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 145;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "tests[\"Has shipping\"] = data.shipping > 0;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "b6d5eda6-a442-4a05-a7e0-8f3c335e9cd4",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"name\":\"Computer Repair\",\r\n         \"quantity\":1,\r\n         \"type\": \"service\",\r\n         \"reference_price\": 100         \r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28ac544f-7c8a-4320-84c4-cbd4a055f651",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 145;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ece8d4c1-f14b-4f32-ae4d-8f37995c68a6",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Refund Items and Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bb304b28-607a-4322-ace7-5c69c9484f55",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 145 && data.subtotal === 130 && data.shipping === 15 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6c711e05-e3f1-4b8f-bb4d-21eb0c193c8d",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"shipping\": 15,\n   \"items\":[\n      {\n         \"item_id\":\"physical.test\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"1\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        }
      ],
      "_postman_id": "8732f557-0d23-40f1-8ad6-d7b0c4d1e0be"
    },
    {
      "name": "With Subscription Product",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d737501-9b52-4956-a859-c3e4cd71ae7d",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 60;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "tests[\"Subscription item has subscription plan\"] = data.items[0].subscription_plan.object !== null,",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "4d0eac35-2d2a-4df3-be7a-fc42fcbd41d1",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital-sub.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": {
              "raw": "https://{{host}}/api/v1/invoices?expand=items.subscription_plan",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "invoices"
              ],
              "query": [
                {
                  "key": "expand",
                  "value": "items.subscription_plan"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "708e5883-1cc6-4b4d-b4e4-4306e97d472d",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 60;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Subscription was created\"] = data.order.items[0].subscription.items[0].reference_price === 20;",
                  "pm.globals.set(\"subscription_url\", data.order.items[0].subscription.url);",
                  "pm.globals.set(\"order_url\", data.order.url);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "495dc63b-a5e6-499f-84d4-cc12ea3b435b",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": {
              "raw": "{{invoice_url}}/payments?expand=order.items.subscription",
              "host": [
                "{{invoice_url}}"
              ],
              "path": [
                "payments"
              ],
              "query": [
                {
                  "key": "expand",
                  "value": "order.items.subscription"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Cancel Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ae204306-77b0-4e54-99eb-8bc615f29d4e",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Subscription has been cancelled\"] = responseCode.code === 200;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "72940f99-8109-4ec7-b440-e40b88bc6e90",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"status\":\"cancelled\",\r\n   \"cancellation_reason\": \"Cancelled upon completion of an automated test\"\r\n}"
            },
            "url": "{{subscription_url}}"
          },
          "response": []
        },
        {
          "name": "Refund Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "934ecabc-8ff8-42f3-93ff-c27bdae4776d",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 50 && data.subtotal === 50 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "4965d619-cd50-4f5d-ab83-825ea13c3e58",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"digital-sub.test\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"physical.test\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2da9dff2-c099-4a52-83e6-737c49d67e91",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund shipping was successful\"] = data.total === 10 && data.subtotal === 0 && data.shipping === 10 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "324f4e7e-e3c3-45b8-8f1b-3cbdcc363d36",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"shipping\": 10\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        }
      ],
      "_postman_id": "abb77c8e-6335-4cd1-a12f-c97d7225d3a2"
    },
    {
      "name": "With Custom Invoice ID",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d1f1156-9f67-4846-a780-16308cdcda06",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);",
                  "pm.globals.set(\"invoice_id\", data.invoice_id);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "9c705ee6-f21f-40c8-a334-622c55050c7e",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"invoice_id\": \"{{$timestamp}}\",\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b52bbf6-8486-4761-9e11-f08ab8d7e82f",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9004203f-5be6-41e5-813f-105ab47af3a1",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Refund Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b1b883bc-4933-4b62-9ae2-aaa13bdb3bfa",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 40 && data.subtotal === 40 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "45a5b1bd-a7fe-411d-83ae-83dc63f33224",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"digital.test\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"physical.test\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7629114f-f7f1-468f-b4d2-5d4d8f8679a9",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund shipping was successful\"] = data.total === 5 && data.subtotal === 0 && data.shipping === 5 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "199027d4-2ade-4582-ba3e-8d2d9a6c867f",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"shipping\": 5\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Re-use Same Custom Invoice ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "07f255ee-81bf-479a-bfd0-5a66e2376a45",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Check duplicate invoice ID\"] = responseCode.code === 400;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "83fde426-70de-45a9-ab47-e8062bbbdfc7",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"invoice_id\": \"{{invoice_id}}\",\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        }
      ],
      "_postman_id": "3cb6e348-a37c-4668-80a6-51a4fef378fe"
    },
    {
      "name": "With Promotion Code",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d5e1137-9dc3-4f25-a913-1022edf54e65",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 25 && data.total_discounts === 20;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "0c71a59c-e638-46d5-b056-a096d1a9d3a0",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"promotion_code\": \"half-off-items\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c8baab72-98b9-4471-85cf-2955cbef1a6a",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 25;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a6b7ebed-4ce0-4d1c-a39c-043995b5ab53",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Refund Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3c8138b4-a5c3-4cc9-bfcb-25c5fc5ce31e",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund items was successful\"] = data.total === 20 && data.subtotal === 20 && data.shipping === 0 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f009db89-9d71-44b0-ba98-e6effeb6c65f",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"items\":[\n      {\n         \"item_id\":\"digital.test\",\n         \"quantity\":1\n      },\n      {\n         \"item_id\":\"physical.test\",\n         \"quantity\":1\n      }\n  ]\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Refund Shipping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7629114f-f7f1-468f-b4d2-5d4d8f8679a9",
                "exec": [
                  "tests[\"Refund created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Refund shipping was successful\"] = data.total === 5 && data.subtotal === 0 && data.shipping === 5 && data.tax === 0;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "94e00e77-2ac1-48aa-bdc0-fad69474dc1a",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"shipping\": 5\n}"
            },
            "url": "{{order_url}}/refunds"
          },
          "response": []
        }
      ],
      "_postman_id": "edf0efb2-1d0f-4d69-a714-320f7cb4118b"
    },
    {
      "name": "With Notification",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "3e0aec61-b4ca-4e4e-9a33-2ad6f936cce9",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Wait 3 seconds",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a05ebd5c-7c23-42c3-9eb9-63ddde25ee85",
                "exec": [
                  "tests[\"Status is 200\"] = responseCode.code === 200;",
                  "",
                  "var date = new Date();",
                  "var waitForMinutes = 7;",
                  "",
                  "tests[\"Waiting a few seconds to let the notification generate\"] = true;",
                  "",
                  "setTimeout(function() {",
                  "    tests[\"Timer completed. Testing resuming...\"] = true;",
                  "}, 3000);",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9751ab2a-b7c5-4e5c-9971-064d19f11c72",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b93edfc4-f42c-470c-8931-f8758032e889",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": "https://{{host}}/api/v1/invoices",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        },
        {
          "name": "Get Notifications",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f208fa42-e2c5-4785-88bc-ceb318bcc2ed",
                "type": "text/javascript",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "tests[\"Notification created successfully\"] = data.total_items === 1;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3d07e1d5-0e57-44c1-8a37-47a59c8428f1",
                "type": "text/javascript",
                "exec": [
                  "setTimeout(function(){}, 2000);"
                ]
              }
            }
          ],
          "_postman_id": "5b6ac161-af6b-4c53-b0c9-3e49897bd57e",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/notifications"
          },
          "response": []
        },
        {
          "name": "Delete Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "351b9428-2f1e-4380-a584-bda5947b66a9",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice deleted successfully\"] = responseCode.code === 204;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "c36475dd-d933-4595-a480-d95ff95cf2b9",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_id": "defbaa86-e5b2-4387-95ba-0c64325f050b",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "9920bbac-997d-4385-8577-f22267ab44da"
    },
    {
      "name": "Multiple Payments",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "3afb3ea3-d69d-40dd-a04f-a5be07fd1369",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "cfd2e212-9bfc-4b39-b979-8518e2d4dcdd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e50d7e26-1fbe-4e59-bf3e-8ac26bbd60c3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 30;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "dcc2c2e9-a0c5-4aa5-bbf8-a111c8ea19c1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 30,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "74e5eaa1-71d4-462b-9a1d-b535b4212f07",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "ceaf39b4-e42a-4de5-8a83-2da3d61fadc7"
    },
    {
      "name": "Multiple Payments, Don't Capture All",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "c73bab58-744d-4561-940d-772ffcdb782b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "516d7520-7634-4ee4-b7b0-94bf69c4d532",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"capture\": false,\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f43ad350-a026-448d-bb3f-d607f2f9d8d0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 30;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "1c61c1ec-b26e-4d3d-b85e-18f501095a70",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 30,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'pending';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "930569f8-7516-4938-b1dc-ef4109bedde7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "c2eda99e-0ebe-4855-b67e-60ad2245053f"
    },
    {
      "name": "Multiple Payments, Exceed Total",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "64e8ef8f-883b-46c9-b005-1013bf23f30b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b5483525-0ebc-4781-aad5-419364ce18df",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "35f9e488-a177-4da1-ad0d-a2d3f06712e9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment fails, amount too high\"] = responseCode.code === 400;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "bb7095d4-16bb-4d6b-943f-c8d81a9a9045",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 100,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining has not changed\"] = data.total_remaining === 30;",
                  "tests[\"Total payments has not changed\"] = data.total_payments === 15;",
                  "tests[\"Payment status has not changed\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "4ab7c192-6509-4171-addc-7b8f4c9754f6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "81ad70b3-8c2f-487e-8138-c4815a139bf8"
    },
    {
      "name": "Multiple Payments, Total Calculated",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "582620b1-48b5-4347-9d07-385b5e8b5672",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Full Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order is created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6a8ad38e-8f65-41d4-bf63-635042ca430a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "c0bd635e-65e3-4048-aa75-82caa3bdbc1e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "fe9f02b2-ab35-43e3-8064-f9c82bb9212e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e997f1ed-25ca-4fd4-af9f-7b1927ea57c8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 30;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7368ec11-f09d-48a3-9b4a-dfa6ec92f73e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c9f44dd1-7a37-463a-becf-e1b382e557b7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "b1fa82ff-c7dd-4737-87a8-5ddd9510e4f3"
    },
    {
      "name": "Multiple Payments, Failed and Successful Payments",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "e9b9fe66-df58-497c-aca9-ef7a523fa3fe",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice, Failed",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment failed\"] = responseCode.code === 402;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "09dcfd45-1ce4-4b72-8193-c5d1fe74389b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566669999\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "933da159-6344-4d90-b4fd-2d964038b383",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "820d4a4b-d412-4a91-af83-fcf9f33a7f59",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 30;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c5bc1fb6-4365-4ff0-b035-9004ff54aa0c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 30,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "992449a0-ff3a-4b50-ab7e-b3e6fb2c7693",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "7e16961e-19fc-4a44-a8ec-0163ee6e855f"
    },
    {
      "name": "Multiple Payments, Refund before Paid",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "2cec7277-ba7c-4d4f-8fa3-66e475207af6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "3c98ae74-cf71-4fb1-add7-baf4b4d2c28a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "607955d2-79f7-4cea-a313-b44899dc12ee",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 20;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order not created\"] = data.order === null;",
                  "pm.globals.set(\"payment_url\", data.url);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7aca2273-e2a6-4a34-9778-5185d729d477",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 20,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 10;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 35;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "349b3f84-1014-4ed6-a3dd-e3f3eaf237d7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Refund Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Refund processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 20;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9fca0a2a-33b6-405c-bc1a-ca067b351728",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{payment_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "25dee15e-0cea-4fff-84b8-3dc3ce411d5a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (3)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 30;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ffc2a34a-a94f-4a5b-8495-bb2f4e35aa5e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 30,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d974be6f-14f2-42b9-8136-15ecd6721e46",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "88aee671-1c86-4c6b-a29f-0bcfc10f52bd"
    },
    {
      "name": "Multiple Payments, Cancel Payment before Invoice Paid",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "726e0b25-6477-481b-a6ec-38504bdc1986",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"No order created\"] = data.order === null;",
                  "pm.globals.set(\"payment_url\", data.url);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "52269344-f3ff-4f64-8275-95a3cab6a302",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "8c061a98-5665-460c-9e0f-06fa81b76292",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Cancel Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment cancelled successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"cancelled\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "234e1527-c887-4ddd-aeec-0df6f5cd4075",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{payment_url}}/void"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 45;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 0;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9c82fb71-948a-42d7-bec6-1d94c828bcb5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "deb2dedd-3049-4359-9350-e1c1c6391e0c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "df696bd1-1497-417b-809f-b850ee8f335c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "6182d619-f85b-43ce-83c5-20a1ed87ea25"
    },
    {
      "name": "Multiple Payments, Partial Refund",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "ce70fc7c-d690-42d1-bfbb-a29e90963c89",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "pm.globals.set(\"payment_url\", data.url);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "db1ce7d5-fbed-4452-8519-e3c1bf21c3a4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "201f16c2-fcf6-444b-8e46-c0ea241ef503",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Process Partial Refund",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Refund processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 5;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ce7d264b-cd2a-48fb-94d1-4855d5d07fc7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 5\r\n}\r\n"
            },
            "url": "{{payment_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 35;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 10;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "8a48bfa5-b81f-48c2-8e91-11e10cd95d3e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 30;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f441e956-bedc-48e9-9bac-4eed0fa49853",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 30,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 5;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 40;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b5de6012-e236-4478-b140-6be16937b989",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (3)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 5;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c82327b3-b81e-4b5f-b2a7-4ef6a3c8b739",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 5,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "22660bc1-1e43-45fe-a8e4-e97373c4f185",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "b5e9f7d5-feb7-4e3a-8857-05887a53e6cd"
    },
    {
      "name": "Multiple Payments, Partial Refund, Calculate Total",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "f573f3ad-a399-453a-be33-ab52f7ce7fba",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "pm.globals.set(\"payment_url\", data.url);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f815c3c7-5962-4e9c-9cc5-ec9534738fa6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "876b93d5-2c7f-4579-a9cb-3aba604ee09f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Process Partial Refund",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Refund processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 5;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f352e81f-a9e8-4af3-aeb1-b513e4e8cb1b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 5\r\n}\r\n"
            },
            "url": "{{payment_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 35;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 10;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "116400cc-45c4-4806-aa29-a06ed07a2248",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 35;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "72be4388-155f-4e3d-9a76-c87e45c9df92",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "1642c0ae-be26-473a-88a5-e8540b869722",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "90ba4444-420d-4393-ae2f-be5c972f0809"
    },
    {
      "name": "Delete Invoice",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "a9795175-01da-4ada-af10-ae9894215891",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Delete Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b52bbf6-8486-4761-9e11-f08ab8d7e82f",
                "exec": [
                  "tests[\"Invoice deleted successfully\"] = responseCode.code === 204;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e6a99164-1957-4a6b-b572-860467cf2d85",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7629114f-f7f1-468f-b4d2-5d4d8f8679a9",
                "exec": [
                  "tests[\"Invoice is deleted (confirmed)\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "fa7ce68b-b305-4b24-8137-653eb2614799",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "c3f2a14c-ab63-45c0-8125-1c42caa3b432"
    },
    {
      "name": "Delete Invoice with Payments",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "195fdfa1-c51c-4152-8c35-50928edd4437",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"No order created\"] = data.order === null;",
                  "pm.globals.set(\"payment_url\", data.url);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b49aa745-1959-4df9-a709-53f4f6255bde",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Delete Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b52bbf6-8486-4761-9e11-f08ab8d7e82f",
                "exec": [
                  "tests[\"Invoice can't be deleted\"] = responseCode.code === 422;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "777480af-def6-4e1c-b2a6-fbc8d78e7c00",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Refund Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Refund processed successfully\"] = responseCode.code === 201;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0d91259e-c6d5-4a4e-bcd3-8312842847ca",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{payment_url}}/refunds"
          },
          "response": []
        },
        {
          "name": "Delete Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b52bbf6-8486-4761-9e11-f08ab8d7e82f",
                "exec": [
                  "tests[\"Invoice has been deleted\"] = responseCode.code === 204;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "52336c6e-11a3-427d-8edd-b8ec06e8355e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7629114f-f7f1-468f-b4d2-5d4d8f8679a9",
                "exec": [
                  "tests[\"Invoice is deleted (confirmed)\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f8133e76-73c4-4597-a985-f61c7b0500cd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "92adb2db-6cf6-4c23-88af-af9acad2e96c"
    },
    {
      "name": "Can't Change with Successful Payments",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "719a574e-ff0f-4657-a477-cb16542b09f3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (failed)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b52bbf6-8486-4761-9e11-f08ab8d7e82f",
                "exec": [
                  "tests[\"Payment failed\"] = responseCode.code === 402;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "948aed7e-829a-41e5-8753-20e454170351",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566669999\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Change Invoice Currency",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice changed to EUR\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Currency is correct\"] = data.currency === \"EUR\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e69c9816-69d5-4e51-8be0-5982e387d0e5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"currency\": \"EUR\"\n}"
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Change Invoice Currency Back",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice changed to EUR\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Currency is correct\"] = data.currency === \"USD\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9faa8d2b-4f88-43eb-91fd-c323ed592d96",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"currency\": \"USD\"\n}"
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b52bbf6-8486-4761-9e11-f08ab8d7e82f",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "17d23373-9573-4774-8d65-b9db43bcc65d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Change Invoice Currency",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice can't be changed\"] = responseCode.code === 422;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "64e51015-b54d-4d95-8614-43c93c287eed",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"currency\": \"EUR\"\n}"
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "79640793-6a86-4cfd-88eb-7adb0f1f202f"
    },
    {
      "name": "Multiple Payments, Single Capture",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "4b4d3bbd-8d50-433f-a2c8-8f6cb3cd97e0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0792fe4b-57d6-4232-87be-ab7b85ef240c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "1a7cad6a-a921-45df-bd1c-d055961dc5d9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 30;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"Order created\"] = data.order !== null;",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ba7050c6-bd53-4b3b-8f10-416647fd6559",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 30,\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'pending';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "472a3797-6e50-427d-89cd-624c6a63181c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Capture Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Capture completed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Payment list success count is OK\"] = data.success_count === 2 && data.failure_count === 0;",
                  "tests[\"Number of captures is OK\"] = data.payments.length === 2;",
                  "tests[\"Payment status is OK\"] = data.payments[0].status === 'completed' && data.payments[1].status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b5abeb05-d888-441f-9031-01b0e2dc593b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{order_url}}/capture"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a1da0b75-910d-437a-aa45-3eabf7b2f9d1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "b02eb496-8ad4-42e0-8b2b-2347a70b5b8b"
    },
    {
      "name": "Multiple Payments, Some Completed, Single Capture",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "02d94622-c680-43df-8404-97a8d9f93ddc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e7aa4075-1ce3-473f-a9c7-488da3759923",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "640095b2-afcb-4300-8694-25c42a7a158b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 10;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "42483d4b-6dde-4f16-9966-ceaa58be777f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 10,\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 20;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 25;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b5ff461c-45ce-4c5a-b1ad-cb0ba4594f21",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (3)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 20;",
                  "tests[\"Status is OK\"] = data.status === \"completed\";",
                  "tests[\"Order created\"] = data.order !== null;",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6d2ef69a-33c7-40e5-b706-9945ae59f8a5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"capture\": true,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'pending';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7e55ebbe-dfe8-4f0e-acdb-f49b437e5384",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Capture Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Capture completed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 25;",
                  "tests[\"Payment list success count is OK\"] = data.success_count === 2 && data.failure_count === 0;",
                  "tests[\"Number of captures is OK\"] = data.payments.length === 2;",
                  "tests[\"Payment status is OK\"] = data.payments[0].status === 'completed' && data.payments[1].status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "064c672e-9934-4ca9-88b5-b7e09c95098c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{order_url}}/capture"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "462f6965-8fb4-4522-aa62-412e14973ec6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "0f369769-3a57-4a62-8d04-c8806f0391ae"
    },
    {
      "name": "Multiple Payments, Some Completed, Multiple Captures",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Invoice created successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 45;",
                  "tests[\"Item count is OK\"] = data.items_count === data.items.length && data.items_count === 2;",
                  "pm.globals.set(\"invoice_url\", data.url);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "type": "text/javascript",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ]
              }
            }
          ],
          "_postman_id": "78dd98e7-0002-4bd8-a552-f2aab0d69a18",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"date_due\": \"{{date_due}}\",\r\n  \"draft\": false,\r\n  \"suppress_customer_notification\": true,\r\n  \"currency\": \"USD\",\r\n   \"items\":[\r\n      {\r\n         \"product_id\":\"digital.test\",\r\n         \"quantity\":1\r\n      },\r\n      {\r\n         \"product_id\":\"physical.test\",\r\n         \"quantity\":1\r\n      }        \r\n   ],\r\n  \"customer\": {\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"billing_address\": {\r\n        \"address_1\": \"{{address_1}}\",\r\n        \"city\": \"{{city}}\",\r\n        \"state_prov\": \"{{state_prov}}\",\r\n        \"postal_code\": \"{{postal_code}}\",\r\n        \"country\": \"{{country}}\"\r\n    }   \r\n  }   \r\n}"
            },
            "url": "https://{{host}}/api/v1/invoices"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 30;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 15;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "2a30a6ca-ffc3-4d27-8ce8-746d9d42481d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 15;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "51989733-9e8e-4d98-abe8-4143d9569a56",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 15,\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 10;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"No order created\"] = data.order === null;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "2f110693-f8bf-4048-8b17-43477c413cd8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"total\": 10,\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 20;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 25;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'unpaid';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "91fb55c7-e3af-44f1-92eb-b7e9d9f4ded2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Pay Partial Invoice (3)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "569bae8a-9c34-4322-a80a-d598b789334d",
                "exec": [
                  "tests[\"Payment processed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 20;",
                  "tests[\"Status is OK\"] = data.status === \"pending\";",
                  "tests[\"Order created\"] = data.order !== null;",
                  "pm.globals.set(\"payment_url\", data.url);",
                  "pm.globals.set(\"order_url\", data.order);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "58cb1d44-e66b-4d7e-86c9-0fc8a94ec2ad",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"capture\": false,\r\n   \"payment_method\": {\r\n     \"save\": false,\r\n     \"type\": \"credit_card\",\r\n     \"data\": {\r\n         \"number\": \"4444555566661111\",\r\n         \"cvv\": 123,\r\n         \"exp_month\": 12,\r\n         \"exp_year\": 2025\r\n      }\r\n   }\r\n}\r\n"
            },
            "url": "{{invoice_url}}/payments"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'pending';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b66d2d30-879b-462b-8aa8-12dfc4e2561a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Capture Payment Directly",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Capture completed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 20;",
                  "tests[\"Status is OK\"] = data.status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f2a23cd3-6389-4e98-84a8-2020781bb94d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{payment_url}}/capture"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'pending';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "198e089d-40de-44dc-b2d1-50221df144d5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        },
        {
          "name": "Capture Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Capture completed successfully\"] = responseCode.code === 201;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total is OK\"] = data.total === 25;",
                  "tests[\"Payment list success count is OK\"] = data.success_count === 2 && data.failure_count === 0;",
                  "tests[\"Number of captures is OK\"] = data.payments.length === 2;",
                  "tests[\"Payment status is OK\"] = data.payments[0].status === 'completed' && data.payments[1].status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "dbf6d039-d2fe-43f7-a4c8-93a78bc15c45",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{order_url}}/capture"
          },
          "response": []
        },
        {
          "name": "Get Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f73e074e-0051-4e94-82f4-e0517427cadc",
                "exec": [
                  "tests[\"Invoice fetched successfully\"] = responseCode.code === 200;",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Total remaining is OK\"] = data.total_remaining === 0;",
                  "tests[\"Total payments is OK\"] = data.total_payments === 45;",
                  "tests[\"Payment status is OK\"] = data.payment_status === 'completed';"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4953e1ce-d1dd-48de-af8f-1305445dc4e8",
                "exec": [
                  "var date = new Date();",
                  "date.setMonth(date.getMonth() + 1);",
                  "pm.globals.set(\"date_due\", date.toISOString().substring(0, 10));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "630c958b-d530-4f60-98f1-e4ef1e868168",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{invoice_url}}"
          },
          "response": []
        }
      ],
      "_postman_id": "e7c2d0c9-f9e6-48c1-b81a-7b821744b344"
    },
    {
      "name": "Post-request Cleanup",
      "item": [
        {
          "name": "Enable Order Notification Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "930c5570-6aa0-4d4d-8d90-448b23b70c0e",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Order email notifications have been enabled\"] = responseCode.code === 200;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "aba03a74-55f6-4b4f-9ff9-e0e92a9f735a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_id": "b0a617ff-0a62-482b-bf87-54ff4d71e659",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"active\": true\n}"
            },
            "url": "{{order_confirmation_subscription_url}}",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        },
        {
          "name": "Enable Payment Notification Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ffd2795-dc47-4167-9981-27957ce2ca07",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Payment email notifications have been enabled\"] = responseCode.code === 200;",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "aba03a74-55f6-4b4f-9ff9-e0e92a9f735a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_id": "d019a512-805b-4cc5-9ac9-95783a2de581",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"active\": true\n}"
            },
            "url": "{{payment_confirmation_subscription_url}}",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        },
        {
          "name": "Enable Refund Notification Subscription Copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e28482e1-c92e-44b2-af10-50dd3fcb694a",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Payment email notifications have been enabled\"] = responseCode.code === 200;",
                  "",
                  "pm.globals.unset(\"order_confirmation_subscription_url\");",
                  "pm.globals.unset(\"payment_confirmation_subscription_url\");",
                  "pm.globals.unset(\"refund_confirmation_subscription_url\");",
                  "pm.globals.unset(\"date_due\");",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "aba03a74-55f6-4b4f-9ff9-e0e92a9f735a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_id": "8474ad73-f02e-4e92-8452-f6c886b536c4",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"active\": true\n}"
            },
            "url": "{{refund_confirmation_subscription_url}}",
            "description": "- This set of tests expects you to use the [Customer Data Subscriptions](https://docs.google.com/spreadsheets/d/14wnj6iScmBw6jANOGR4Ki71uVzn5dZgE0KFAGEbz6LI/edit#gid=0) data collection in the runner.\n- This set of tests expects you to be using the Base Account."
          },
          "response": []
        }
      ],
      "_postman_id": "d4045dc9-bcab-4943-a5e9-0977f416ee51"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "df5d39b9-2659-430f-ab2c-0b60b7b9f7af",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "087925ec-a19d-4f29-8948-4ae286011cd3",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "6f8faade-0575-432e-b298-ec5f47c50db5",
      "key": "name",
      "value": "James Smith",
      "type": "string"
    },
    {
      "id": "2a12b00b-c89e-4e5b-bf65-08ce1a0a4fc9",
      "key": "address_1",
      "value": "648 Broad St",
      "type": "string"
    },
    {
      "id": "6bc3ec0e-f0ec-4e3d-b044-58223ab2475b",
      "key": "city",
      "value": "Westerville",
      "type": "string"
    },
    {
      "id": "9b49e34e-3ccf-42de-95fe-1de2e4709445",
      "key": "state_prov",
      "value": "OH",
      "type": "string"
    },
    {
      "id": "15e53b93-b941-410c-9265-b42d56e15b04",
      "key": "postal_code",
      "value": "43081",
      "type": "string"
    },
    {
      "id": "9a02c09e-3951-45eb-bd5b-245e70ccb080",
      "key": "country",
      "value": "US",
      "type": "string"
    },
    {
      "id": "f8b66025-c443-436c-8c15-0c186243495b",
      "key": "phone",
      "value": "614-555-0191",
      "type": "string"
    }
  ]
}